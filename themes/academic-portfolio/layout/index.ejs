<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= theme.profile.name %> - <%= theme.profile.title %></title>
    <link rel="stylesheet" href="<%= url_for('css/style.css') %>">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css">
</head>
<body>
<main class="main-content">
    <section id="intro" class="section">
        <div class="container">
            <div class="intro-content">
                <div class="intro-image">
                    <div class="image-wrapper">
                        <img src="<%= theme.profile.image %>" alt="<%= theme.profile.name %>" class="profile-image">
                    </div>
                </div>
                <div class="intro-text">
                    <h1><%= theme.intro.title %></h1>
                    <div class="title-tags">
                        <% theme.intro.tags.forEach(function(tag) { %>
                            <span class="tag"><%= tag %></span>
                        <% }); %>
                    </div>
                    <div class="narrative">
                        <% theme.intro.narrative.forEach(function(paragraph) { %>
                            <p><%- paragraph %></p>
                        <% }); %>
                    </div>
                    <div class="quick-links">
                        <a href="<%= theme.intro.buttons.cv.url %>" class="btn btn-primary"><%= theme.intro.buttons.cv.text %></a>
                        <a href="<%= theme.intro.buttons.contact.url %>" class="btn btn-secondary"><%= theme.intro.buttons.contact.text %></a>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <section id="research" class="section">
        <div class="container">
            <h2>Research</h2>
            <div class="research-interests">
                <ul>
                    <% theme.research_interests.forEach(function(interest) { %>
                        <li><%= interest %></li>
                    <% }); %>
                </ul>
            </div>
        </div>
    </section>

    <section id="news" class="section">
        <div class="container">
            <h2>Latest News</h2>
            <div class="news-container">
                <div class="news-list">
                    <% site.data.news.forEach((item, index) => { %>
                        <div class="news-item">
                            <span class="news-date"><%= item.date %></span>
                            <span class="news-content">
                                <% if (item.link) { %>
                                    <a href="<%= item.link %>"><%= item.title %></a>
                                <% } else { %>
                                    <%= item.title %>
                                <% } %>
                            </span>
                        </div>
                    <% }); %>
                </div>
            </div>
        </div>
    </section>


    <section id="publications" class="section">
        <div class="container">
            <h2>Publications</h2>
            <!-- Filters -->
            <div class="publication-filters">
                <div class="type-filters">
                    <button class="filter-button active" data-filter="all">All</button>
                    <button class="filter-button" data-filter="workshop">Workshops</button>
                    <button class="filter-button" data-filter="poster">Posters</button>
                    <!-- <button class="filter-button" data-filter="journal">Journals</button> -->
                    <!-- <button class="filter-button" data-filter="book">Books</button> -->
                </div>
                <div class="tag-filters">
                    <span class="tag-filter-label">Tags:</span>
                    <div class="selected-tags"></div>
                    <button class="tag-dropdown-toggle">
                        <i class="fas fa-tags"></i> Filter by Tags
                    </button>
                    <div class="tag-dropdown" style="display: none;">
                        <div class="tag-dropdown-content"></div>
                    </div>
                </div>
            </div>

            <!-- Publications List -->
            <div class="publications-list">
                <% site.data.publications.forEach((pub, index) => { %>
                    <div class="publication-item" data-type="<%= pub.type %>" data-tags="<%= pub.tags ? pub.tags.join(',') : '' %>">
                        <div class="publication-header">
                            <h3 class="publication-title">
                                <%= pub.title %>
                                <% if (pub.featured) { %>
                                    <span class="publication-badge">Featured</span>
                                <% } %>
                            </h3>
                            <div class="publication-badges">
                                <span class="publication-badge"><%= pub.year %></span>
                                <span class="publication-badge"><%= pub.type %></span>
                            </div>
                        </div>
                        
                        <div class="publication-meta">
                            <div class="publication-authors">
                                <% const authors = pub.authors.split(', '); %>
                                <% authors.forEach((author, index) => { %>
                                    <% if (author.trim() === theme.publication.highlight_name.trim()) { %>
                                        <span class="highlighted-name"><%= author %></span><%= index < authors.length - 1 ? ', ' : '' %>
                                    <% } else { %>
                                        <%= author %><%= index < authors.length - 1 ? ', ' : '' %>
                                    <% } %>
                                <% }); %>
                            </div>
                            <div class="publication-venue">
                                <%= pub.venue %>
                                <% if (pub.type === 'conference') { %>
                                    <span class="badge">Conference</span>
                                <% } %>
                            </div>
                        </div>
                        
                        <% if (pub.tags && pub.tags.length > 0) { %>
                        <div class="publication-tags">
                            <% pub.tags.forEach(tag => { %>
                                <span class="tag-badge" data-tag="<%= tag %>"><%= tag %></span>
                            <% }); %>
                        </div>
                        <% } %>

                        <div class="publication-actions">
                            <% if (pub.pdf) { %>
                                <a href="<%= pub.pdf %>" class="publication-action" target="_blank">
                                    <i class="fas fa-file-pdf"></i> PDF
                                </a>
                            <% } %>
                            <% if (pub.doi) { %>
                                <a href="https://doi.org/<%= pub.doi %>" class="publication-action" target="_blank">
                                    <i class="fas fa-link"></i> DOI
                                </a>
                            <% } %>
                            <% if (pub.code) { %>
                                <a href="<%= pub.code %>" class="publication-action" target="_blank">
                                    <i class="fab fa-github"></i> Code
                                </a>
                            <% } %>
                            <button class="publication-action citation-copy" data-pub="<%= index %>">
                                <i class="fas fa-copy"></i> Cite
                            </button>
                        </div>

                        <button class="abstract-toggle collapsed">
                            Show Abstract
                        </button>
                        <div class="publication-abstract collapsed">
                            <%= pub.abstract %>
                        </div>
                    </div>
                <% }); %>
            </div>
        </div>
    </section>

    <!-- <section id="awards" class="section">
        <div class="container">
            <h2>Awards</h2>
            <div class="awards-list">
            </div>
        </div>
    </section>

    <section id="software" class="section">
        <div class="container">
            <h2>Software & Datasets</h2>
            <div class="software-list">
            </div>
        </div>
    </section>

    <section id="team" class="section">
        <div class="container">
            <h2>NU WiNS Lab</h2>
            <div class="team-list">
            </div>
        </div>
    </section> -->
</main>

<script>
document.addEventListener('DOMContentLoaded', function() {
    // Initialize tag filtering system
    let selectedTags = new Set();
    let activeTypeFilter = 'all';
    
    // Collect all unique tags
    const allTags = new Set();
    document.querySelectorAll('.publication-item').forEach(item => {
        const tags = item.dataset.tags ? item.dataset.tags.split(',') : [];
        tags.forEach(tag => {
            if (tag) allTags.add(tag);
        });
    });
    
    // Populate tag dropdown
    const tagDropdownContent = document.querySelector('.tag-dropdown-content');
    if (tagDropdownContent) {
        Array.from(allTags).sort().forEach(tag => {
            const tagOption = document.createElement('span');
            tagOption.className = 'tag-option';
            tagOption.textContent = tag;
            tagOption.dataset.tag = tag;
            
            // Add click handler for each tag option
            tagOption.addEventListener('click', function() {
                const tag = this.dataset.tag;
                if (selectedTags.has(tag)) {
                    selectedTags.delete(tag);
                    this.classList.remove('selected');
                } else {
                    selectedTags.add(tag);
                    this.classList.add('selected');
                }
                updateSelectedTagsDisplay();
                filterPublications();
            });
            
            tagDropdownContent.appendChild(tagOption);
        });
    }
    
    // Tag dropdown toggle
    const tagDropdownToggle = document.querySelector('.tag-dropdown-toggle');
    const tagDropdown = document.querySelector('.tag-dropdown');
    if (tagDropdownToggle && tagDropdown) {
        tagDropdownToggle.addEventListener('click', function(e) {
            e.stopPropagation();
            tagDropdown.style.display = tagDropdown.style.display === 'none' ? 'block' : 'none';
        });
        
        // Close dropdown when clicking outside
        document.addEventListener('click', function() {
            tagDropdown.style.display = 'none';
        });
        
        tagDropdown.addEventListener('click', function(e) {
            e.stopPropagation();
        });
    }
    
    // Tag badge click handler (in publications)
    document.querySelectorAll('.tag-badge').forEach(badge => {
        badge.addEventListener('click', function() {
            const tag = this.dataset.tag;
            if (!selectedTags.has(tag)) {
                selectedTags.add(tag);
                document.querySelector(`.tag-option[data-tag="${tag}"]`)?.classList.add('selected');
                updateSelectedTagsDisplay();
                filterPublications();
            }
        });
    });
    
    // Update selected tags display
    function updateSelectedTagsDisplay() {
        const selectedTagsContainer = document.querySelector('.selected-tags');
        selectedTagsContainer.innerHTML = '';
        
        selectedTags.forEach(tag => {
            const tagElement = document.createElement('span');
            tagElement.className = 'selected-tag';
            tagElement.innerHTML = `${tag} <i class="fas fa-times"></i>`;
            tagElement.addEventListener('click', function() {
                selectedTags.delete(tag);
                document.querySelector(`.tag-option[data-tag="${tag}"]`)?.classList.remove('selected');
                updateSelectedTagsDisplay();
                filterPublications();
            });
            selectedTagsContainer.appendChild(tagElement);
        });
    }
    
    // Combined filter function
    function filterPublications() {
        document.querySelectorAll('.publication-item').forEach(item => {
            const type = item.dataset.type;
            const tags = item.dataset.tags ? item.dataset.tags.split(',') : [];
            
            // Check type filter
            const passesTypeFilter = activeTypeFilter === 'all' || type === activeTypeFilter;
            
            // Check tag filter
            const passesTagFilter = selectedTags.size === 0 || 
                Array.from(selectedTags).some(tag => tags.includes(tag));
            
            // Show/hide based on both filters
            if (passesTypeFilter && passesTagFilter) {
                item.style.display = 'block';
            } else {
                item.style.display = 'none';
            }
        });
    }
    
    // Abstract toggle functionality
    document.querySelectorAll('.abstract-toggle').forEach(toggle => {
        toggle.addEventListener('click', function() {
            const abstract = this.nextElementSibling;
            abstract.classList.toggle('collapsed');
            this.classList.toggle('collapsed');
            this.textContent = abstract.classList.contains('collapsed') ? 'Show Abstract' : 'Hide Abstract';
        });
    });

    // Type filter functionality
    document.querySelectorAll('.filter-button').forEach(button => {
        button.addEventListener('click', function() {
            activeTypeFilter = this.dataset.filter;
            
            // Update active button
            document.querySelectorAll('.filter-button').forEach(btn => {
                btn.classList.remove('active');
            });
            this.classList.add('active');

            // Apply combined filters
            filterPublications();
        });
    });

    // Citation copy functionality
    document.querySelectorAll('.citation-copy').forEach(button => {
        button.addEventListener('click', function() {
            const pubIndex = this.dataset.pub;
            const publications = <%- JSON.stringify(site.data.publications) %>;
            const pub = publications[pubIndex];
            
            // Generate ACM BibTeX citation
            const bibtex = `@inproceedings{${pub.title.toLowerCase().replace(/[^a-z0-9]/g, '')}${pub.year},
  title={${pub.title}},
  author={${pub.authors}},
  booktitle={${pub.venue}},
  year={${pub.year}},
  doi={${pub.doi}}
}`;
            
            // Copy to clipboard
            navigator.clipboard.writeText(bibtex).then(() => {
                const originalText = this.innerHTML;
                this.innerHTML = '<i class="fas fa-check"></i> Copied!';
                setTimeout(() => {
                    this.innerHTML = originalText;
                }, 2000);
            });
        });
    });

    // Mobile menu functionality
    const menuToggle = document.querySelector('.menu-toggle');
    const mainNav = document.querySelector('.main-nav ul');
    
    menuToggle.addEventListener('click', function() {
        mainNav.classList.toggle('active');
        const icon = this.querySelector('i');
        icon.classList.toggle('fa-bars');
        icon.classList.toggle('fa-times');
    });

    // Close menu when clicking outside
    document.addEventListener('click', function(event) {
        if (!mainNav.contains(event.target) && !menuToggle.contains(event.target)) {
            mainNav.classList.remove('active');
            const icon = menuToggle.querySelector('i');
            icon.classList.add('fa-bars');
            icon.classList.remove('fa-times');
        }
    });

    // Close menu when clicking a link
    mainNav.querySelectorAll('a').forEach(link => {
        link.addEventListener('click', function() {
            mainNav.classList.remove('active');
            const icon = menuToggle.querySelector('i');
            icon.classList.add('fa-bars');
            icon.classList.remove('fa-times');
        });
    });
});
</script>

